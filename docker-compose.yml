services:
  backend:
    image: ${BACKEND_IMAGE}:latest
    env_file:
      - .env
    expose:
      - 8030
    environment:
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=PathPrefix(`${SUBDOMAIN}`)
      - traefik.http.middlewares.stripper.stripprefix.prefixes=${SUBDOMAIN}
      - traefik.http.routers.backend.middlewares=stripper

  traefik:
    image: traefik:2.6
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    command:
      - --api
      - --entrypoints.web=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.websecure=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=le
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers=le
      - --certificatesresolvers.le.acme.caserver=${CASERVER}
      - --certificatesresolvers.le.acme.email=${CERT_EMAIL}
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.storage=letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.tls.certresolver=le
      - traefik.http.routers.dashboard.tls.domains[0].main=traefik.${DOMAIN}
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=${AUTH}
